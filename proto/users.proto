syntax = "proto3";
package users_pb;
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate.proto";
option go_package =".;users_pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "v1";
  };
  external_docs: {
    url: "http://localhost:8001/";
    description: "Camera System Open API";
  }
  schemes: HTTP;
};
service UserService {
  // 注册
  rpc Register(UserRegisterRequest)returns(UserResponse){
    option (google.api.http) = {
      post: "/api/v1/register",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "用户注册",
      description: "注册一个新用户",
      tags: "Users"
    };
  };
  // 登录
  rpc Login(UserLoginRequest)returns(UserResponse){
    option (google.api.http) = {
      post: "/api/v1/login",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "用户登录",
      description: "根据手机号码与密码进行登录",
      tags: "Users"
    };
  };
}
message UserRegisterRequest {
  // 手机号码
  string phoneNumber = 1 [(validate.rules).string = {pattern: "^1[3|5|7|8][0-9]{9}$"}];
  // 登录密码
  string password = 3 [(validate.rules).string = {min_len: 6, max_len: 30}];
  // 验证码
  string code = 4 [(validate.rules).string.len = 6];
}
message UserLoginRequest {
  string phoneNumber = 1 [(validate.rules).string = {pattern: "^1[3|5|7|8][0-9]{9}$"}];
  string password = 2 [(validate.rules).string = {min_len: 6, max_len: 30}];
}
message UserResponse {
  int32 code = 1;
  string message = 2;
  User details = 3;
}
message User {
  int32 id = 1;
  string phoneNumber = 2;
  string lastLoginDate =3;
  string lastLoginIp =4;
  int32 status = 5;
  uint32 created_at = 6;
  uint32 updated_ta = 7;
}