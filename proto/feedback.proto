syntax = "proto3";
package feedback_pb;
option go_package = ".;feedback_pb";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate.proto";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Camera System OpenAPI";
    version: "v0.01";
  };
  external_docs: {
    url: "http://localhost:8001/";
    description: "Camera System Open API";
  }
  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "X-Camera-Token"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }
  security: {
    security_requirement: {
      key: "bearer"
    }
  }
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
};
service FeedbackService {
  // 新增反馈
  rpc Create(CreateRequest)returns(CreateResponse){
    option (google.api.http) = {
      post: "/v1/feedback",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "创建一个新的反馈",
      description: "创建一个新的反馈",
      tags: "反馈"
    };
  };
}
message CreateRequest {
  string content = 1 [(validate.rules).string = {min_len: 5, max_len: 500}];
  string phone_number =2 [(validate.rules).string = {pattern: "^1[3|5|7|8][0-9]{9}$"}];
}
message CreateResponse {
  int32 id = 1 ;
}